@model NCDNewMIS.Models.FilterModel
@using NCDNewMIS.Models
@{
    ViewBag.Title = "Image Uploaded Lists";
    ViewBag.TitleIcon = "fa fa-user";
    ViewBag.SemiTitle = "Image Uploaded Lists";
    ViewBag.SemiTitleLink = "/";
}
<style>
    #report-map {
        width: 480px !important
    }

    .border-all {
        display: flex;
        gap: 20px;
        padding: 1px;
        background: #F5F5F5;
        margin: 0px;
    }
</style>
<!-- Content body start -->
<div class="content-body">
    <div class="container-fluid">
        <!-- Row -->
        <div class="page-titles dark:bg-[#1b1b1b] rounded-ss-md flex items-center justify-between relative  mb-[1.875rem] flex-wrap z-[1] py-[0.9375rem] sm:px-[0.975rem] px-[1.875rem] bg-white">
            <h4>@ViewBag.Title</h4>
            <button type="button" id="div-download"
                    title="Click here to Download To Excel"></button>
        </div>

        <div class="row">
            <div class="filter cm-content-box box-primary relative rounded-lg mb-4 bg-white dark:bg-[#1b1b1b]">
                @*<div class="content-title flex justify-between items-center py-4 sm:px-6 px-[1.2rem] card-toggle-btn">
                        <div class="cpa text-dark dark:text-white text-base font-semibold">
                            <i class="fa-sharp fa-solid fa-filter mr-2"></i>Filter
                        </div>
                        <div class="tools">
                            <a href="javascript:void(0);" class="expand SlideToolHeader inline-block"><i class="fal fa-angle-down font-['Font_Awesome_6_Free'] font-semibold text-[#c2c2c2] text-xl arrow"></i></a>
                        </div>
                    </div>*@
                <div class="content form excerpt border-t border-b-color dark:border-[#ffffff1a]">
                    <div class="row">
                        <div class="card">
                            @using (Html.BeginForm("GetImageUpload", "Home", FormMethod.Post, new { @id = "tblList-frm", @class = "panel-body form-horizontal form-padding loader" }))
                            {
                                @*@Html.HiddenFor(m=>m.RoundType)*@
                                <div class="filter cm-content-box box-primary relative rounded-lg mb-0 bg-white dark:bg-[#1b1b1b]">
                                    <div class="content form excerpt border-b-color dark:border-[#ffffff1a]">
                                        <div>
                                            <div class="border-all">
                                                <div class="mb-4 md:w-1/2">
                                                    @Html.LabelFor(model => model.RoundType, htmlAttributes: new { @class = "form-label" })
                                                    @Html.DropDownListFor(m => m.RoundType, CommonModel.GetRoundType(), "All", new { @id = "RoundType", onchange = "onchgRoundType()", @class = "form-control relative text-[13px] text-body-color h-[2.813rem] border border-b-color block rounded-lg py-1.5 px-3 duration-500  outline-none w-full ", @required = "required" })
                                                </div>
                                                <div class="mb-4 md:w-1/2">
                                                    @Html.LabelFor(model => model.BlockId, htmlAttributes: new { @class = "form-label" })
                                                    @Html.DropDownListFor(m => m.BlockId, new List<SelectListItem>(), "All", new { @class = "form-control relative text-[13px] text-body-color h-[2.813rem] border border-b-color block rounded-lg py-1.5 px-3 duration-500  outline-none w-full ", @required = "required" })
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <div class="w-full">
                    <div class="row">
                        <div class="card">
                            <div class="col-sm-11">
                                <div id="subdata">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>

    </div>
</div>

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/JS/Master.js"></script>

    <script>

        $(document).ready(function () {

            BindBlock("BlockId", '', "0", 2);
            setTimeout(function () {
                BindData();
            }, 1000);

            //$('#RoundType').change(function () {
            //    BindData();
            //    BindBlock("BlockId", '', "0", $(this).val());
            //});
            $('#BlockId').change(function () {
                BindData();
            });
            //$('#RoundType').change(function () {
            //    BindData();
            //});
            //$('#CHCId').change(function () {
            //    BindPHC("PHCId", '', "0", $('#BlockId').val(), $(this).val());
            //});
            //LoadReport();
            //$("#btnsubmit").click(function (e) {
            //    e.preventDefault();
            //    LoadReport();
            //});

        });
        function onchgRoundType() {
            debugger;
            BindBlock("BlockId", '', "0", $('#RoundType').val());
            BindData();
        }
        function BindData() {
            $("#subdata").html('');
            var formData = $('#formid').serialize();
            var filtermodel = new Object();
            debugger
            //filtermodel.BlockId = $("#BlockId").val() == "" ? "0" : $("#BlockId").val();
           // filtermodel.RoundType = $("#RoundType").val() == "" ? "0" : $("#RoundType").val();
            var BlockId = $("#BlockId").val() == "" || $("#BlockId").val() == "All" ? "0" : $("#BlockId").val();
            var RoundType = $("#RoundType").val() == "" || $("#RoundType").val() == "All" ? "0" : $("#RoundType").val();

            $.ajax({
                type: "Get",
                url: document.baseURI + "/Home/GetImageUpload",
                data: { 'BlockId': BlockId, 'RoundType': RoundType },
                //cache: false,
                success: function (res) {
                    if (res.IsSuccess) {
                        $("#subdata").html(res.Data);

                        if ($.fn.dataTable.isDataTable('#tbl')) {
                            $("#tbl").dataTable().fnDestroy();
                        }
                        table = $('#tbl').DataTable({
                            //scrollY: "400px",
                            //scrollX: true,
                            //scrollCollapse: true,
                            //paging: false,
                            pageLength: 100,
                            fixedColumns: {
                                leftColumns: 1,
                                rightColumns: 1
                            },
                            order: [[0, 'asc']],
                            buttons: [{
                                extend: 'excel', text: '<span><i class="fa fa-download"></i>Export</span>', title: 'Gallery Lists',//$('#IDDistrict option:selected').text() +
                                className: 'btn btn-primary button-icon mr-3 mt-1 mb-1',
                                filename: ' List',
                                exportOptions: { modifier: { page: 'all' } }
                            }],
                        });
                        $('.dataTables_filter input[type="search"]').css(
                            { 'width': '200px', 'display': 'inline-block' }
                        );
                        $('#div-download').empty();
                        table.buttons().container().appendTo($('#div-download'));
                    }
                    else {
                        $("#subdata").html(res.Data);
                    }
                },
                error: function (req, error) {
                    if (error === 'error') { error = req.statusText; }
                    var errormsg = 'There was a communication error: ' + error;
                    //Do To Message display
                }
            });
        }


    </script>
}
