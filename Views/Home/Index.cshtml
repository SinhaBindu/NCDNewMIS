@using System.Data
@{
    ViewBag.Title = "Raw Data - ACT II";
    DataSet ds = new DataSet();
    DataTable dtmains = new DataTable();
    DataTable dt1 = new DataTable();
    DataTable dt2 = new DataTable();
    if (Model != null)
    {
        ds = Model;
        if (ds.Tables.Count > 0)
        {
            dtmains = ds.Tables[0];
            dt1 = ds.Tables[1];
            dt2 = ds.Tables[2];
        }
    }
}
<style>
    .loading {
        position: fixed;
        top: 0;
        z-index: 900;
        width: 100%;
        height: 100%;
        display: none;
        background: rgba(0,0,0,0.6);
    }

    .cv-spinner {
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .spinner {
        width: 40px;
        height: 40px;
        border: 4px #ddd solid;
        border-top: 4px #2e93e6 solid;
        border-radius: 50%;
        animation: sp-anime 0.8s infinite linear;
    }

    @@keyframes sp-anime {
        100% {
            transform: rotate(360deg);
        }
    }

    .is-hide {
        display: none;
    }
</style>
<div id="spinner" class="loading">
    <div class="cv-spinner">
        <span class="spinner"></span>
    </div>
    @*<img src="~/Content/assets/images/Loading_2.gif" alt="Loading" />*@
</div>
<div class="content-body">
    <div class="container-fluid">
        <div class="page-titles dark:bg-[#1b1b1b] rounded-ss-md flex items-center justify-between relative  mb-[1.875rem] flex-wrap z-[1] py-[0.9375rem] sm:px-[0.975rem] px-[1.875rem] bg-white">
            <h4>@ViewBag.Title</h4>
            <button type="button" id="div-download"
                    title="Click here to Download To Excel"></button>

            <button id="exportBtn" class="mr-1 mb-2 inline-block rounded-lg font-medium xl:text-[10px] text-xs leading-5 xl:py-[0.719rem] xl:px-[1.563rem] py-2.5 px-4 border border-primary text-white bg-primary hover:bg-hover-primary hover:border-hover-primary duration-300"><i class="fa fa-file-export"></i> Export to Excel</button>
        </div>

        <div class="row">

            <div class="filter cm-content-box box-primary relative rounded-lg mb-4 bg-white dark:bg-[#1b1b1b]">
                @*<div class="content-title flex justify-between items-center py-4 sm:px-6 px-[1.2rem] card-toggle-btn">
                        <div class="cpa text-dark dark:text-white text-base font-semibold">
                            <i class="fa-sharp fa-solid fa-filter mr-2"></i>Filter
                        </div>
                        <div class="tools">
                            <a href="javascript:void(0);" class="expand SlideToolHeader inline-block"><i class="fal fa-angle-down font-['Font_Awesome_6_Free'] font-semibold text-[#c2c2c2] text-xl arrow"></i></a>
                        </div>
                    </div>*@
                <div class="content form excerpt border-t border-b-color dark:border-[#ffffff1a]">
                    <div class="p-[1.0rem] max-sm:p-4">
                        <div class="border-all">

                            <div class="mb-4 md:w-1/2">
                                <label class="form-label">Screening Type</label>
                                <select class="nice-select style-1 py-1.5 px-[1.563rem] bg-transparent text-[13px] font-normal outline-none relative focus:ring-0 border border-b-color text-[#a5a5a5] h-[2.813rem] leading-[1.813rem]" name="SType" id="SType">
                                    @foreach (var item in NCDNewMIS.Models.CommonModel.GetScreeningType(true).ToList())
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                            </div>
                            <div class="mb-4 md:w-1/2">
                                <label class="form-label">From Date (App Entry)</label>
                                <input type="text" name="FD" id="FD" class="datepicker
                                       form-control relative text-[13px] text-body-color h-[2.813rem] border border-b-color block rounded-lg py-1.5 px-3 duration-500  outline-none w-full
                                       date-picker-input" value="" autocomplete="off" />
                            </div>
                            <div class="mb-4 md:w-1/2">
                                <label class="form-label">To Date (App Entry)</label>
                                <input type="text" name="TD" id="TD" class="datepicker
                                       form-control relative text-[13px] text-body-color h-[2.813rem] border border-b-color block rounded-lg py-1.5 px-3 duration-500  outline-none w-full
                                       date-picker-input" value="" autocomplete="off" />
                            </div>
                            <div class="sm:w-1/2 mt-6">
                                <button name="btnsubmit" id="btnsubmit"
                                        class="mr-1 mb-2 inline-block rounded-lg font-medium xl:text-[15px] text-xs leading-5 xl:py-[0.719rem] xl:px-[1.563rem] py-2.5 px-4 border border-primary text-white bg-primary hover:bg-hover-primary hover:border-hover-primary duration-300">
                                    Search
                                </button>
                                <a href="~/Home/Index" class="mr-1 mb-2 inline-block rounded-lg font-medium xl:text-[15px] text-xs leading-5 xl:py-[0.719rem] xl:px-[1.563rem] py-2.5 px-4 border border-warning bg-warning text-white hover:bg-[#ffa91a] duration-300"><i class="fa fa-refresh"></i></a>
                            </div>

                        </div>
                    </div>
                </div>
            </div>

            <div class="w-full">
                <div class="card dz-card dz-tab-area" id="Tailwind-table1">

                    <div class="pt-0 p-[1.875rem]">
                        <div class="overflow-x-auto table-scroll">
                            <div class="col-md-12" id="subdata">
                            </div>
                            <div class="col-md-12">
                                <div class="summarydata" style="display:none;">
                                    @{
                                        <!-- Table Raw Summary Main -->
                                        if (dtmains.Rows.Count > 0)
                                        {
                                            <table id="tblsummary" class="display tblsummarydata" style="width:100%;">
                                                <thead>
                                                    <tr>
                                                        <th rowspan="2">District</th>
                                                        <th rowspan="2">Block</th>
                                                        <th rowspan="2">Total household visit target (estimated)</th>
                                                        <th rowspan="2">Total HHs visited</th>
                                                        <th rowspan="2">Total member age 30+ interacted </th>
                                                        <th rowspan="2">% of household members age 30+ who are already a patient of hypertension</th>
                                                        <th rowspan="2"># of household members age 30+ who are already a patient of hypertension (numerator)</th>
                                                        <th rowspan="2">If yes, % of members continuing with medication</th>
                                                        <th colspan="5">If yes, whom does he/she consult for medication?</th>
                                                        <th rowspan="2">% of household members who are already a patient of diabetes</th>
                                                        <th rowspan="2"># of household members who are already a patient of diabetes (numerator)</th>
                                                        <th rowspan="2">If yes, % of member continuing with medication</th>
                                                        <th colspan="5">If yes, whom does he/she consult for medication?</th>
                                                    </tr>
                                                    <tr>
                                                        <th>Government Doctor</th>
                                                        <th>Private Doctor</th>
                                                        <th>Private pharmacist (Self medication)</th>
                                                        <th>Rural medical practitioner</th>
                                                        <th>Did not consult  any medical practit</th>
                                                        <th>Government Doctor</th>
                                                        <th>Private Doctor</th>
                                                        <th>Private pharmacist (Self medication)</th>
                                                        <th>Rural medical practitioner</th>
                                                        <th>Did not consult any medical practit</th>
                                                       
                                                    </tr>
                                                </thead>
                                               
                                                <tbody>
                                                    @foreach (DataRow dr in dtmains.Rows)
                                                    {
                                                        <tr>
                                                            <td>@dr["District"]</td>
                                                            <td>@dr["Block"]</td>
                                                            <td>@dr["Target"]</td>
                                                            <td>@dr["HHVisted"]</td>
                                                            <td>@dr["MemberAge30"]</td>
                                                            <td>@dr["MemberHyperPer"]</td>
                                                            <td>@dr["MemberHypertensionMedication30yes"]</td>
                                                            <td>@dr["MemberHyperMedicationPer"]</td>
                                                            <td>@dr["MemberHyperGovtDoctorPer"]</td>
                                                            <td>@dr["MemberHyperPrivateDoctorPer"]</td>
                                                            <td>@dr["MemberHyperPrivatePharmacistPer"]</td>
                                                            <td>@dr["MemberHyperRuralPer"]</td>
                                                            <td>@dr["MemberHyperNoOnePer"]</td>
                                                            <td>@dr["MemberDiabitisePer"]</td>
                                                            <td>@dr["MemberConsultDiabitisevalueMedication"]</td>
                                                            <td>@dr["MemberDiabitiseContinueMedicationPer"]</td>
                                                            <td>@dr["MemberDiabitiseGovtDoctorPer"]</td>
                                                            <td>@dr["MemberDiabitisePrivateDoctorPer"]</td>
                                                            <td>@dr["MemberDiabitisePrivatePharmacistPer"]</td>
                                                            <td>@dr["MemberDiabitiseRuralPer"]</td>
                                                            <td>@dr["MemberDiabitiseNoOnePer"]</td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        }
                                        <!-- Table 1 -->
                                        if (dt1.Rows.Count > 0)
                                        {
                                            <table id="tblsummary1" class="display tblsummarydata" style="width:100%;">
                                                <thead>
                                                    <tr>
                                                        <th>District</th>
                                                        <th>Block</th>
                                                        <th> No risk <br /> systolic: less <br />than 120 mm Hg <br /> diastolic: less than 80 mm Hg</th>
                                                        <th>
                                                            Pre-hyper  systolic: 120–139<br /> mm Hg and/or <br /> diastolic: 80–89 mm Hg
                                                        </th>
                                                        <th> Hyper <br /> systolic: 140 mm Hg or higher<br /> and/or diastolic:<br /> 90 mm Hg or higher</th>
                                                        <th># of members screened<br /> for hypertension<br /> (denominator)</th>
                                                        <th>Blood sugar <br /> level (>140mg/dl)</th>
                                                        <th># of members<br /> screened for<br /> diabetes (denominator)</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (DataRow dr in dt1.Rows)
                                                    {
                                                        <tr>
                                                            <td>@dr["District"]</td>
                                                            <td>@dr["Block"]</td>
                                                            <td>@dr["NoRisk"]</td>
                                                            <td>@dr["PreHyper"]</td>
                                                            <td>@dr["Hyper"]</td>
                                                            <td>@dr["HyperReading"]</td>
                                                            <td>@dr["RandomBloodSugar"]</td>
                                                            <td>@dr["SugerReading"]</td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        }
                                        <!-- Table 2 -->
                                        if (dt2.Rows.Count > 0)
                                        {
                                            <table id="tblsummary2" class="display tblsummarydata" style="width:100%;">
                                                <thead>
                                                    <tr> <th colspan="7"><strong>Screening status of four Blocks</strong></th></tr>
                                                    <tr>
                                                        <th>District</th>
                                                        <th>Block</th>
                                                        <th>Target</th>
                                                        <th>Achieved (bood pressure)</th>
                                                        <th>Pending (bood pressure)</th>
                                                        <th>Achieved (blood sugar) </th>
                                                        <th>Pending (blood sugar)</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (DataRow dr in dt2.Rows)
                                                    {
                                                        <tr>
                                                            <td>@dr["District"]</td>
                                                            <td>@dr["Block"]</td>
                                                            <td>@dr["Target"]</td>
                                                            <td>@dr["HyperReading"]</td>
                                                            <td>@dr["PendingHyperReading"]</td>
                                                            <td>@dr["SugerReading"]</td>
                                                            <td>@dr["PendingSugerReading"]</td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")


    @*<link href="https://cdn.datatables.net/2.0.6/css/dataTables.dataTables.css" />*@
    <link href="https://cdn.datatables.net/2.0.8/css/dataTables.dataTables.css" />
    <link href="https://cdn.datatables.net/buttons/3.0.2/css/buttons.dataTables.css" />
    <!--------------------------------------Data Table---------------------------------------->
    @*<script src="https://cdn.datatables.net/responsive/2.5.0/js/dataTables.responsive.min.js"></script>*@

    <script src="https://cdn.datatables.net/2.0.6/js/dataTables.js"></script>
    <script src="https://cdn.datatables.net/buttons/3.0.2/js/dataTables.buttons.js"></script>
    <script src="https://cdn.datatables.net/buttons/3.0.2/js/buttons.dataTables.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/3.0.2/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/3.0.2/js/buttons.print.min.js"></script>
    @*<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>*@

    <script>
        $(function () {
            var dateFormat = "dd-M-yy",
                from = $("#FD")
                    .datepicker({
                        defaultDate: "+1w",
                        changeMonth: true,
                        numberOfMonths: 1,
                        dateFormat: 'dd-M-yy',
                        //minDate: -3,
                        //maxDate: "1w"
                    })
                    .on("change", function () {
                        to.datepicker("option", "minDate", getDate(this));
                    }),
                to = $("#TD").datepicker({
                    defaultDate: "+1w",
                    changeMonth: true,
                    numberOfMonths: 1,
                    dateFormat: 'dd-M-yy',
                    // minDate: -3,
                    //maxDate: "1w"

                })
                    .on("change", function () {
                        from.datepicker("option", "maxDate", getDate(this));
                    });

            function getDate(element) {
                var date;
                try {
                    date = $.datepicker.parseDate(dateFormat, element.value);
                } catch (error) {
                    date = null;
                }

                return date;
            }


        });

        $(document).ready(function () {
           // $('#FD').val('@(DateTime.Today.AddDays(-1).ToString("dd-MMM-yyyy"))');
            $('#FD').val('@DateTime.Now.Date.ToString("dd-MMM-yyyy")');
            $('#TD').val('@DateTime.Now.Date.ToString("dd-MMM-yyyy")');
            BindData();

            //$('#SType').change(function () {
            //    BindData();
            //})

            $("#btnsubmit").click(function (e) {
                e.preventDefault();
                BindData();

                $('#tbl').DataTable();
                $('#tblsummary').DataTable();
                $('#tblsummary1').DataTable();
                $('#tblsummary2').DataTable();
            });

            //export to excel
            //$('#exportBtn').click(function () {
            //    debugger;
            //    $('#tbl').DataTable();
            //    // Get Data from Table 1
            //    var table1 = $('#tbl').DataTable();
            //    var table1Data = table1.rows().data().toArray();

            //    // Get Data from Table 2
            //    var table2 = $('#tblsummary1').DataTable();
            //    var table2Data = table2.rows().data().toArray();

            //    var table3 = $('#tblsummary2').DataTable();
            //    var table3Data = table3.rows().data().toArray();

            //    //// Create Workbook and Sheets
            //    //var wb = XLSX.utils.book_new();

            //    //// Create Sheet 1 for Table 1 Data
            //    //var ws1 = XLSX.utils.json_to_sheet(table1Data, {
            //    //    header: ["Name", "Position", "Office"]
            //    //});
            //    //XLSX.utils.book_append_sheet(wb, ws1, "Table 1");

            //    //// Create Sheet 2 for Table 2 Data
            //    //var ws2 = XLSX.utils.json_to_sheet(table2Data, {
            //    //    header: ["Department", "Head", "Location"]
            //    //});
            //    //var ws2 = XLSX.utils.json_to_sheet(table3Data, {
            //    //    header: ["Department", "Head", "Location"]
            //    //});
            //    //XLSX.utils.book_append_sheet(wb, ws2, "Table 2");

            //    //// Export to Excel
            //    //XLSX.writeFile(wb, "ExportedData.xlsx");


            //    //test
            //    // Convert JSON data to sheets
            //    //var headers1 = table1.columns().header().toArray();
            //    //var wsRaw1 = XLSX.utils.json_to_sheet(table1Data, {
            //    //    header: headers1
            //    //});
            //    ////var wsRawSumary = XLSX.utils.json_to_sheet(table2Data);
            //    //var headers2 = table2.columns().header().toArray();
            //    //var headerNames = headers2.map(function (hrd) {
            //    //    return $(hrd).text().trim();
            //    //});

            //    //var ws1 = XLSX.utils.json_to_sheet(table2Data, {
            //    //    header: [headerNames]
            //    //});


            //   // var wsRaw1 = XLSX.utils.json_to_sheet(table1Data);
            //   // var ws1 = XLSX.utils.json_to_sheet(table2Data, {
            //   //     header: ["District","Block","No risk ystolic: less than 120 mm Hg diastolic: less than 80 mm Hg",
            //   //         "Pre-hyper systolic: 120–139 mm Hg and / or diastolic: 80–89 mm Hg",
            //   //         "Hyper systolic: 140 mm Hg or higher and / or diastolic: 90 mm Hg or higher",
            //   //         "# of members screened for hypertension (denominator)",
            //   //         "# of members screened for diabetes (denominator)",
            //   //     ]
            //   // });
            //   // var ws2 = XLSX.utils.json_to_sheet(table3Data);

            //   // // Create a new workbook
            //   // var wb = XLSX.utils.book_new();

            //   // // Append sheets to workbook
            //   // XLSX.utils.book_append_sheet(wb, wsRaw1, "RawDataSet");
            //   //// XLSX.utils.book_append_sheet(wb, wsRawSumary, "RawDataSet");
            //   // XLSX.utils.book_append_sheet(wb, ws1, "Hypertension");
            //   // XLSX.utils.book_append_sheet(wb, ws2, "ScreeningStatus");

            //   // // Export the workbook to an Excel file
            //   // XLSX.writeFile(wb, "RawDataSummary.xlsx");


            //});

            $('#exportBtn').click(function () {
                // Get Data from Table 1
                var table1 = $('#tbl').DataTable();
                var table1Data = table1.rows().data().toArray();

                // Get Data from Table 2
                var tablesmain = $('#tblsummary').DataTable();
                var tablemainsummaryData = tablesmain.rows().data().toArray();

                // Get Data from Table 2
                var table2 = $('#tblsummary1').DataTable();
                var table2Data = table2.rows().data().toArray();

                // Get Data from Table 2
                var table3 = $('#tblsummary2').DataTable();
                var table3Data = table3.rows().data().toArray();

                //// Create Workbook and Sheets
                //var wb = XLSX.utils.book_new();

                //// Create Sheet 1 for Table 1 Data
                //var ws1 = XLSX.utils.json_to_sheet(table1Data, {
                //  //  header: ["Name", "Position", "Office", "Age", "Start date", "Salary"]
                //});
                //XLSX.utils.book_append_sheet(wb, ws1, "Table 1");

                //// Create Sheet 2 for Table 2 Data
                //var ws2 = XLSX.utils.json_to_sheet(table2Data, {
                //    //header: ["Department", "Head", "Location"]
                //});
                //XLSX.utils.book_append_sheet(wb, ws2, "Table 2");

                //// Export to Excel
                //XLSX.writeFile(wb, "ExportedData.xlsx");

                // Combine the Data
                var combinedData = [];
                var combinedData1 = [];
                var combinedData2 = [];

                // Add a header for Table 1
                 var headerstbl = table1.columns().header().toArray();
                var headerNamestbl = headerstbl.map(function (hrd) {
                    return $(hrd).text().trim();
                });
                combinedData.push(["Raw Submission Data"]);
                combinedData.push(headerNamestbl);
                combinedData = combinedData.concat(table1Data.map(function (row) {
                    return Object.values(row);
                }));

                // Add an empty row to separate the data
                combinedData.push([]);
                //combinedData1.push([]);

                debugger;
                // Add a header for Table main summary
                var headersmainsumary = tablesmain.columns().header().toArray();
                var headerNames2mainsummary = headersmainsumary.map(function (hrd, i) {
                    return $(hrd).text().trim();
                });
                //headerNames2mainsummary.push([{ text: "If yes, whom does he/she consult for medication?", range: "I2:M2" }]);
                combinedData1.push(["Block wise"]);
                combinedData1.push([]);
                //combinedData1.push(["If yes, whom does he/she consult for medication?"]);
                //combinedData1.push(["If yes, whom does he/she consult for medication?"]);
                combinedData1.push(headerNames2mainsummary,);
                combinedData1 = combinedData1.concat(tablemainsummaryData.map(function (row) {
                    return Object.values(row);
                }));


                combinedData1.push([]);

                // Add a header for Table 1
                var headers1 = table2.columns().header().toArray();
                var headerNames1 = headers1.map(function (hrd) {
                    return $(hrd).text().trim();
                });
                combinedData1.push([]);
                combinedData1.push(headerNames1);
                combinedData1 = combinedData1.concat(table2Data.map(function (row) {
                    return Object.values(row);
                }));

                combinedData1.push([]);

                // Add a header for Table 2
                var headers2 = table3.columns().header().toArray();
                var headerNames2 = headers2.map(function (hrd, i) {
                    return $(hrd).text().trim();
                });
                combinedData1.push(["Screening status of four Blocks"]);
                combinedData1.push(headerNames2);
                combinedData1 = combinedData1.concat(table3Data.map(function (row) {
                    return Object.values(row);
                }));

                // Create Workbook and Sheet
                var wb = XLSX.utils.book_new();
                var ws = XLSX.utils.aoa_to_sheet(combinedData);
                var ws1 = XLSX.utils.aoa_to_sheet(combinedData1);

                
                // Define merge ranges using decode_range
                var mergeRange1 = XLSX.utils.decode_range("A1:AK1"); // Merge A1:D1
                var mergeRange2 = XLSX.utils.decode_range("A1:U1"); // Merge A1:D1
                var mergeRange2_1 = XLSX.utils.decode_range("I2:M2"); // Merge A1:D1
                var mergeRange2_2 = XLSX.utils.decode_range("Q2:U2"); // Merge A1:D1
                var mergeRange3 = XLSX.utils.decode_range("A18:G18"); // Merge A1:D1
               // var mergeRange2 = XLSX.utils.decode_range("A2:D2"); // Merge A2:D2
                // Apply merges to the worksheet
                ws['!merges'] = [mergeRange1];
                ws1['!merges'] = [mergeRange2, mergeRange2_1, mergeRange2_2,mergeRange3];

                // Optionally, apply some styling (for example)
                var titleStyle = {
                    font: { bold: true, sz: 14, color: { rgb: "#000000" } },  // Bold, 14pt, white font
                    fill: { fgColor: { rgb: "#4F81BD" } },                    // Blue background
                    alignment: { horizontal: "center", vertical: "center" }  // Center alignment
                };

                // Apply style to the merged title cells
                ws['A1'].s = titleStyle;
                //ws['A2'].s = titleStyle;
                var range = XLSX.utils.decode_range(ws['!ref']);
                for (var C = range.s.c; C <= range.e.c; ++C) {
                    var address = XLSX.utils.encode_col(C) + "1"; // <-- first row, column number C
                    if (!ws[address]) continue;
                    ws[address].v = ws[address].v.toUpperCase();
                }


               // var ws2 = XLSX.utils.aoa_to_sheet(combinedData2);
                XLSX.utils.book_append_sheet(wb, ws, "Raw Submission Data");
                XLSX.utils.book_append_sheet(wb, ws1, "Raw Summary Data");
                //XLSX.utils.book_append_sheet(wb, ws2, "Raw Summary Data");


                // Export to Excel
                XLSX.writeFile(wb, "Raw Submission.xlsx");

            });


        });//End Load Method

        function BindData() {
            $('#spinner').show();
            $("#subdata").html('');
            var formData = $('#formid').serialize();
            var SType = $("#SType").val();
            var FD = $("#FD").val();
            var TD = $("#TD").val();
            $.ajax({
                type: "Get",
                url: document.baseURI + "/Home/GetDataRowList",
                data: { SType: SType, FD: FD, TD: TD },
                //cache: false,
                success: function (res) {
                    if (res.IsSuccess) {
                        $('#spinner').hide();
                        $("#subdata").html(res.Data);

                        if ($.fn.dataTable.isDataTable('#tbl')) {
                            $("#tbl").dataTable().fnDestroy();
                        }
                        table = $('#tbl').DataTable({
                            //responsive: true,
                            //"sDom": '<"bottom"i>rt<"top"flp><"clear">',
                            // "searching": true,
                            //"dom": 'rtip',
                            //"lengthChange": false,
                            // scrollY: "400px",
                            // scrollX: true,
                            //scrollCollapse: true,
                            //paging: false,
                            pageLength: 100,
                            fixedHeader: true,
                            //fixedColumns: {
                            //    leftColumns: 1,
                            //    rightColumns: 1
                            //},
                            "dom": '<"pull-left"f><"pull-right"l>tip',
                            //"pageLength": 100,
                            //"lengthChange": false,
                            columnDefs: [
                                {
                                    target: 1,
                                    className: 'cell-border'
                                }
                            ],
                            order: [[0, 'asc']],
                            //buttons: [{
                            //    extend: 'excel', text: '<span><i class="fa fa-download"></i> Download To Excel</span>', title: 'NCD Raw Data Lists',//$('#IDDistrict option:selected').text() +
                            //    className: 'mr-1 mb-2 inline-block rounded-lg font-medium xl:text-[10px] text-xs leading-5 xl:py-[0.719rem] xl:px-[1.563rem] py-2.5 px-4 border border-primary text-white bg-primary hover:bg-hover-primary hover:border-hover-primary duration-300',
                            //    filename: 'NCD Raw Data List',
                            //    exportOptions: { modifier: { page: 'all' } }
                            //}],
                        });
                        $('.dataTables_filter input[type="search"]').css(
                            { 'width': '500px', 'display': 'inline-block' }
                        );
                       // $('#div-download').empty();
                       // table.buttons().container().appendTo($('#div-download'));
                        $('#spinner').hide();
                    }
                    else {
                        $("#subdata").html("<h4 class='text-danger text-center'>" + res.Data + "</h5>");
                        $('#spinner').hide();
                    }
                },
                error: function (req, error) {
                    if (error === 'error') { error = req.statusText; }
                    var errormsg = 'There was a communication error: ' + error;
                    //Do To Message display
                    $('#spinner').hide();
                }
            });
        }

        $(document).ajaxSend(function () {
            $('#spinner').show();
        });

        $(document).ajaxComplete(function () {
            $('#spinner').hide();
        });

    </script>
}
